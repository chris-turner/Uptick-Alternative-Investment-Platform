@page "/BreakResults/{BreakID}"
@inject HttpClient Http
@inject NavigationManager NavManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage


@if (breakResults == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<div class="row">
		@foreach (var result in breakResults)
		{
			<div class="col-md-4">
				@if (result.card.isVideo)
				{
					<video style="display: block; width:30% " class="" src="@result.card.CardImageURL" loop="" autoplay="" playsinline="" preload="auto" controls="" muted=""></video>
				}
				else
				{
					<p><img src="@result.card.CardImageURL" /></p>
				}
				<p>

					@if (!String.IsNullOrEmpty(@result.card.Grader))
					{
						cardName = $"{@result.card.Player} {@result.card.CardName} {@result.card.Grader} {@result.card.Grade}";
					}
					else
					{
						cardName = $"{@result.card.Player} {@result.card.CardName}";
					}
					@cardName
				</p>
				<p><b>@result.user.username</b></p>
			</div>

		}
	</div>
}

@code {
	[Parameter]
	public string BreakID { get; set; }
	private List<BreakSlot> breakResults;
	User loggedInUser;
	string cardName;

	protected override async Task OnInitializedAsync()
	{
		loggedInUser = await localStorage.GetItemAsync<User>("loggedInUser");
		if (loggedInUser != null)
		{
			breakResults = loggedInUser.breaks.Where(b => b.breakId == BreakID).FirstOrDefault().breakResults;
		}
	}
}
