@page "/Add"
@inject IJSRuntime JsRuntime
@inject HttpClient Http

<h3>Add</h3>

<table class="full-table" cellpadding="0" cellspacing="0">

    <tr>
        <th class="table-td">Front Image</th>
        <th class="table-td">Back Image</th>
        <th class="table-td">Title</th>
        <th class="table-td">Description</th>
        <th class="table-td">Price</th>
        <th class="table-td">Graded</th>
        <th class="table-td">Grader</th>
        <th class="table-td">Grade</th>
        <th class="table-td">Sport</th>
        <th class="table-td">Team</th>
        <th class="table-td">League</th>
        <th class="table-td">Shipping</th>
        <th class="table-td">Search</th>
    </tr>
    @for (int i = 0; i < rows.Count; i++)
    {

        <tr>
            <td class="table-td"><input @bind="title" class="table-input" type="text" /></td>
            <td class="table-td"><input @bind="description" class="table-input" type="text" /></td>
            <td class="table-td"><input @bind="price" class="table-input" type="text" /></td>
            <td class="table-td">
                <select @onchange="selectGraded">
                    @foreach (var gradingCompany in new[] { "", "Yes", "No" })
                    {
                        <option value=@gradingCompany>@gradingCompany</option>
                    }
                </select>
            </td>
            <td class="table-td">
                <select @onchange="selectGrader">
                    @foreach (var gradingCompany in new[] { "", "PSA", "SGC" })
                    {
                        <option value=@gradingCompany>@gradingCompany</option>
                    }
                </select>
            </td>

            <td class="table-td"><input class="table-input" type="text" /></td>
            <td class="table-td"><input class="table-input" type="text" /></td>
            <td class="table-td"><input class="table-input" type="text" /></td>
            <td class="table-td"><input class="table-input" type="text" /></td>
            <td class="table-td">
                @foreach (var choice in new[] { "BMWT", "PWE" })
                {
                    <label>
                        <input name="shippingOptionInput" type="radio"
                       value="@choice"
                       checked="@(shippingOption == choice)"
                       @onchange="@(() => { shippingOption = choice; })">
                        @choice.ToString()
                    </label>
                }
            </td>
            <td class="table-td">
                <span style="padding-left:15px" class="oi oi-magnifying-glass" aria-hidden="true"></span>
            </td>


        </tr>
    }
    <p><button type="button" class="btn btn-primary" @onclick="(() => AddRow())">Add row</button></p>
</table>


<p><button type="button" class="btn btn-primary" @onclick="(() => CreateSpreadsheet())">Add</button></p>


@code {
    private string title = "";
    private string description = "";
    private string price = "";
    private string shippingOption = "";
    private string grader = "";
    List<int> rows = new List<int>();


    //public List<COMCCard> COMCPurchases = new List<COMCCard>();

    protected override async Task OnInitializedAsync()
    {
        rows.Add(0);
        //COMCPurchases = await Http.GetFromJsonAsync<List<COMCCard>>("sample-data/COMCPurchases.json");
    }

    private async void AddRow()
    {
        rows.Add(0);

    }


    private async void CreateSpreadsheet()
    {
        string info =
        $"Title: {title}{Environment.NewLine}Description: {description}{Environment.NewLine}"
        + $"Price: {price}{Environment.NewLine}Shipping: {shippingOption}{Environment.NewLine}Grader: {grader}";
        await JsRuntime.InvokeVoidAsync("alert", info); // Alert
    }
    private void selectGrader(ChangeEventArgs e)
    {
        grader = e.Value.ToString();
    }
    private void selectGraded(ChangeEventArgs e)
    {
        grader = e.Value.ToString();
    }
}
