@page "/account"
@inject NavigationManager NavManager
@inject Blazored.LocalStorage.ISyncLocalStorageService localStorage
@inject AppState AppState

<h3>Account</h3>
@if (loggedInUser != null)
{

	<div class="row pad-bottom">
		<div class="col-1"></div>
		<div class="col-10">
			<p>Welcome @loggedInUser.username</p>
			<button type="button" class="btn btn-primary" @onclick='logoutUser'>
				Log out
			</button>
		</div>
		<div class="col-1"></div>
	</div>
	<div class="row pad-bottom">
		<div class="col-1"></div>
		<div class="col-10">
			<h5>Linked Accounts</h5>
		</div>
		<div class="col-1"></div>
	</div>
	<div class="row pad-bottom">
		<div class="col-1"></div>
		<div class="col-10">
			<button type="button" class='btn btn-primary' style="background-color:mediumpurple !important; padding-bottom:5px !important;">Dapper</button>
		</div>
		<div class="col-1"></div>
	</div>
	<div class="row pad-bottom">
		<div class="col-1"></div>
		<div class="col-10">
			<button type="button" class='btn btn-primary' style="background-color:orange !important">MetaMask</button>
		</div>
		<div class="col-1"></div>
	</div>
}

@code {
	User loggedInUser;
	protected override void OnInitialized()
	{
		AppState.OnChange += StateHasChanged;
		loggedInUser = localStorage.GetItem<User>("loggedInUser");
		if (loggedInUser == null)
		{
			NavManager.NavigateTo($"/account/login");
		}
	}

	protected void logoutUser()
	{
		loggedInUser = null;
		localStorage.SetItem("loggedInUser", loggedInUser);
		AppState.stateChange();
		NavManager.NavigateTo($"/",forceLoad: true);
	}

	public void Dispose()
	{
		AppState.OnChange -= StateHasChanged;
	}
}
